{"remainingRequest":"/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akshaykumar/Documents/api-ink/src/components/CategoryGraph.vue?vue&type=style&index=0&id=60f68ef0&scoped=true&lang=css&","dependencies":[{"path":"/Users/akshaykumar/Documents/api-ink/src/components/CategoryGraph.vue","mtime":1584816151889},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogLmNvbnRhaW5lciB7CiAgd2lkdGg6IDQwJSU7CiAgaGVpZ2h0OiA0MCU7CiAgbGVmdDogMDsKfSAqLwo="},{"version":3,"sources":["CategoryGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA","file":"CategoryGraph.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div>\n      <LineChart :styles=\"myStyles\" :chart-data=\"datacollection\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChart from \"./GraphWrapper.js\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    LineChart\n  },\n  data() {\n    return {\n      datacollection: null,\n      loaded: false,\n      data: []\n    };\n  },\n  mounted() {\n    this.getBankSplits();\n\n    this.$root.$on(\"ExpenseAdded\", () => {\n      this.getBankSplits();\n    });\n  },\n  methods: {\n    fillData() {\n      this.datacollection = {\n        labels: [\n          \"Citi Credit Card\",\n          \"Bofa Credit Card\",\n          \"Bofa Checking Account\",\n          \"DCU Checking\",\n          \"Discover Savings\",\n          \"Discover Credit Card\",\n          \"Marriott Credit Card\",\n          \"Chase Credit Card\"\n        ],\n        datasets: [\n          {\n            label: \"Temp\",\n            backgroundColor: [\n              \"#41B883\",\n              \"#E46651\",\n              \"#00D8FF\",\n              \"#E0D8FF\",\n              \"#4068FF\",\n              \"#E1D800\",\n              \"#00FF00\",\n              \"#00FFFF\"\n            ],\n            borderColor: \"lightpink\",\n            pointBackgroundColor: \"blue\",\n            borderWidth: 1,\n            data: this.data\n          }\n        ]\n      };\n    },\n\n    getBankSplits() {\n      axios\n        .get(\"http://localhost:5000/getBankSplits\")\n        .then(response => {\n          var results = response.data;\n          var Citi = results.Total[0].CitiCreditCard;\n          var DCUChecking = results.Total[0].DCUChecking;\n          var BofaCr = results.Total[0].BofaCreditCard;\n          var BofaChk = results.Total[0].BofaCheckingAccount;\n          var MarriottCr = results.Total[0].MarriottCreditCard;\n          var ChaseCr = results.Total[0].ChaseCreditCard;\n          var DiscoverSavings = results.Total[0].DiscoverSavings;\n          var DiscoverCr = results.Total[0].DiscoverCreditCard;\n\n          this.data = [\n            Citi,\n            BofaCr,\n            BofaChk,\n            DCUChecking,\n            DiscoverSavings,\n            DiscoverCr,\n            MarriottCr,\n            ChaseCr\n          ];\n          this.fillData();\n          console.log(this.data);\n        })\n        .catch(err => console.error(err));\n    }\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: \"100%\",\n        width: \"90%\",\n        position: \"relative\"\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* .container {\n  width: 40%%;\n  height: 40%;\n  left: 0;\n} */\n</style>\n"]}]}