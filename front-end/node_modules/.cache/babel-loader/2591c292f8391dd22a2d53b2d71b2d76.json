{"remainingRequest":"/Users/akshaykumar/Documents/api-ink/node_modules/babel-loader/lib/index.js!/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akshaykumar/Documents/api-ink/src/components/MonthTotal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/akshaykumar/Documents/api-ink/src/components/MonthTotal.vue","mtime":1585512757487},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJhckNoYXJ0IGZyb20gIi4vQmFyQ2hhcnQuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQmFyQ2hhcnQ6IEJhckNoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YWNvbGxlY3Rpb246IG51bGwsCiAgICAgIGxvYWRlZDogZmFsc2UsCiAgICAgIGRhdGE6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5nZXRCYW5rU3BsaXRzKCk7CiAgICB0aGlzLiRyb290LiRvbigiRXhwZW5zZUFkZGVkIiwgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5nZXRCYW5rU3BsaXRzKCk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbGxEYXRhOiBmdW5jdGlvbiBmaWxsRGF0YSgpIHsKICAgICAgdGhpcy5kYXRhY29sbGVjdGlvbiA9IHsKICAgICAgICBsYWJlbHM6IFsiRXhwZW5zZXMiLCAiVGFyZ2V0Il0sCiAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICBsYWJlbDogIkFjdHVhbCIsCiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsiIzQxQjg4MyIsICIjRTQ2NjUxIl0sCiAgICAgICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICAgIGRhdGE6IHRoaXMuZGF0YQogICAgICAgIH0sIHsKICAgICAgICAgIGxhYmVsOiAiVGFyZ2V0IiwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogWyIjRTQ2NjUxIiwgIiNFNDY2NTEiXSwKICAgICAgICAgIGJvcmRlcldpZHRoOiAxLAogICAgICAgICAgZGF0YTogWzM2MDBdCiAgICAgICAgfV0KICAgICAgfTsKICAgIH0sCiAgICBnZXRCYW5rU3BsaXRzOiBmdW5jdGlvbiBnZXRCYW5rU3BsaXRzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGF4aW9zLmdldCgiaHR0cDovL2xvY2FsaG9zdDo1MDAwL2dldEJhbmtTcGxpdHMiKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciByZXN1bHRzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBfdGhpczIuZGF0YSA9IFtyZXN1bHRzLlRvdGFsWzBdLk1vbnRobHlUb3RhbCwgMzYwMF07CgogICAgICAgIF90aGlzMi5maWxsRGF0YSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbXlTdHlsZXM6IGZ1bmN0aW9uIG15U3R5bGVzKCkgewogICAgICByZXR1cm4gewogICAgICAgIGhlaWdodDogIjQwJSIsCiAgICAgICAgd2lkdGg6ICI4NSUiLAogICAgICAgIHBvc2l0aW9uOiAicmVsYXRpdmUiCiAgICAgIH07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["MonthTotal.vue"],"names":[],"mappings":";;;;;;;;;AAUA,OAAA,QAAA,MAAA,eAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,OAXA,qBAWA;AAAA;;AACA,SAAA,aAAA;AAEA,SAAA,KAAA,CAAA,GAAA,CAAA,cAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,aAAA;AACA,KAFA;AAGA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,cAAA,GAAA;AACA,QAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,CADA;AAEA,QAAA,QAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,eAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAFA;AAGA,UAAA,WAAA,EAAA,CAHA;AAIA,UAAA,IAAA,EAAA,KAAA;AAJA,SADA,EAQA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,eAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAFA;AAGA,UAAA,WAAA,EAAA,CAHA;AAIA,UAAA,IAAA,EAAA,CAAA,IAAA;AAJA,SARA;AAFA,OAAA;AAkBA,KApBA;AAqBA,IAAA,aArBA,2BAqBA;AAAA;;AACA,MAAA,KAAA,CACA,GADA,CACA,qCADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,YAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EAAA,YAAA,EAAA,IAAA,CAAA;;AACA,QAAA,MAAA,CAAA,QAAA;AACA,OANA,EAOA,KAPA,CAOA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA,OAPA;AAQA;AA9BA,GAlBA;AAkDA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA;AAPA;AAlDA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 align=\"center\">THIS MONTH VS PREVIOUS MONTH</h2>\n    <div>\n      <BarChart :styles=\"myStyles\" :chart-data=\"datacollection\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport BarChart from \"./BarChart.js\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    BarChart\n  },\n  data() {\n    return {\n      datacollection: null,\n      loaded: false,\n      data: []\n    };\n  },\n  mounted() {\n    this.getBankSplits();\n\n    this.$root.$on(\"ExpenseAdded\", () => {\n      this.getBankSplits();\n    });\n  },\n  methods: {\n    fillData() {\n      this.datacollection = {\n        labels: [\"Expenses\", \"Target\"],\n        datasets: [\n          {\n            label: \"Actual\",\n            backgroundColor: [\"#41B883\", \"#E46651\"],\n            borderWidth: 1,\n            data: this.data\n          },\n\n          {\n            label: \"Target\",\n            backgroundColor: [\"#E46651\", \"#E46651\"],\n            borderWidth: 1,\n            data: [3600]\n          }\n        ]\n      };\n    },\n    getBankSplits() {\n      axios\n        .get(\"http://localhost:5000/getBankSplits\")\n        .then(response => {\n          var results = response.data;\n          this.data = [results.Total[0].MonthlyTotal, 3600];\n          this.fillData();\n        })\n        .catch(err => console.error(err));\n    }\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: \"40%\",\n        width: \"85%\",\n        position: \"relative\"\n      };\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}