{"remainingRequest":"/Users/akshaykumar/Documents/api-ink/node_modules/babel-loader/lib/index.js!/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/akshaykumar/Documents/api-ink/src/components/GraphSample.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/akshaykumar/Documents/api-ink/src/components/GraphSample.vue","mtime":1585523101894},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/akshaykumar/Documents/api-ink/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBpZUNoYXJ0IGZyb20gIi4vUGllQ2hhcnQuanMiOyAvLyBpbXBvcnQgQmFyQ2hhcnQgZnJvbSAiLi9CYXJDaGFydC5qcyI7CgppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUGllQ2hhcnQ6IFBpZUNoYXJ0IC8vIEJhckNoYXJ0CgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFjb2xsZWN0aW9uOiBudWxsLAogICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICBvcHRpb25zOiB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkaXNwbGF5OiAiZmFsc2UiCiAgICAgICAgfQogICAgICB9LAogICAgICBkYXRhOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuZ2V0QmFua1NwbGl0cygpOwogICAgdGhpcy4kcm9vdC4kb24oIkV4cGVuc2VBZGRlZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuZ2V0QmFua1NwbGl0cygpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmaWxsRGF0YTogZnVuY3Rpb24gZmlsbERhdGEoKSB7CiAgICAgIHZhciBhID0gWyJBIiwgIkIiLCAiQyJdOwogICAgICB2YXIgbGFiZWxkYXRhOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGFiZWxkYXRhICs9IFthXVtpXTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2coW2xhYmVsZGF0YV0pOwogICAgICB0aGlzLmRhdGFjb2xsZWN0aW9uID0gewogICAgICAgIGxhYmVsczogWyJDaXRpIENyZWRpdCBDYXJkIiwgIkJvZmEgQ3JlZGl0IENhcmQiLCAiQm9mYSBDaGVja2luZyBBY2NvdW50IiwgIkRDVSBDaGVja2luZyIsICJEaXNjb3ZlciBTYXZpbmdzIiwgIkRpc2NvdmVyIENyZWRpdCBDYXJkIiwgIk1hcnJpb3R0IENyZWRpdCBDYXJkIiwgIkNoYXNlIENyZWRpdCBDYXJkIl0sCiAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsiIzQxQjg4MyIsICIjRTQ2NjUxIiwgIiMwMEQ4RkYiLCAiI0UwRDhGRiIsICIjNDA2OEZGIiwgIiNFMUQ4MDAiLCAiIzAwRkYwMCIsICIjMDBGRkZGIl0sCiAgICAgICAgICBib3JkZXJDb2xvcjogImxpZ2h0cGluayIsCiAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogImJsdWUiLAogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEKICAgICAgICB9XQogICAgICB9OwogICAgfSwKICAgIGdldEJhbmtTcGxpdHM6IGZ1bmN0aW9uIGdldEJhbmtTcGxpdHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjUwMDAvZ2V0QmFua1NwbGl0cyIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdmFyIHJlc3VsdHMgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHZhciBDaXRpID0gcmVzdWx0cy5Ub3RhbENhcmRbMF0uQ2l0aUNyZWRpdENhcmQ7CiAgICAgICAgdmFyIERDVUNoZWNraW5nID0gcmVzdWx0cy5Ub3RhbENhcmRbMF0uRENVQ2hlY2tpbmc7CiAgICAgICAgdmFyIEJvZmFDciA9IHJlc3VsdHMuVG90YWxDYXJkWzBdLkJvZmFDcmVkaXRDYXJkOwogICAgICAgIHZhciBCb2ZhQ2hrID0gcmVzdWx0cy5Ub3RhbENhcmRbMF0uQm9mYUNoZWNraW5nQWNjb3VudDsKICAgICAgICB2YXIgTWFycmlvdHRDciA9IHJlc3VsdHMuVG90YWxDYXJkWzBdLk1hcnJpb3R0Q3JlZGl0Q2FyZDsKICAgICAgICB2YXIgQ2hhc2VDciA9IHJlc3VsdHMuVG90YWxDYXJkWzBdLkNoYXNlQ3JlZGl0Q2FyZDsKICAgICAgICB2YXIgRGlzY292ZXJTYXZpbmdzID0gcmVzdWx0cy5Ub3RhbENhcmRbMF0uRGlzY292ZXJTYXZpbmdzOwogICAgICAgIHZhciBEaXNjb3ZlckNyID0gcmVzdWx0cy5Ub3RhbENhcmRbMF0uRGlzY292ZXJDcmVkaXRDYXJkOwogICAgICAgIF90aGlzMi5kYXRhID0gW0NpdGksIEJvZmFDciwgQm9mYUNoaywgRENVQ2hlY2tpbmcsIERpc2NvdmVyU2F2aW5ncywgRGlzY292ZXJDciwgTWFycmlvdHRDciwgQ2hhc2VDcl07CgogICAgICAgIF90aGlzMi5maWxsRGF0YSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbXlTdHlsZXM6IGZ1bmN0aW9uIG15U3R5bGVzKCkgewogICAgICByZXR1cm4gewogICAgICAgIGhlaWdodDogIjQwJSIsCiAgICAgICAgd2lkdGg6ICI5OSUiLAogICAgICAgIHBvc2l0aW9uOiAicmVsYXRpdmUiCiAgICAgIH07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["GraphSample.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 align=\"center\">SPLIT BY CARD</h2>\n    <div>\n      <PieChart :styles=\"myStyles\" :chartData=\"datacollection\" :options=\"options\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport PieChart from \"./PieChart.js\";\n// import BarChart from \"./BarChart.js\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    PieChart\n    // BarChart\n  },\n  data() {\n    return {\n      datacollection: null,\n      loaded: false,\n      options: {\n        legend: {\n          display: \"false\"\n        }\n      },\n      data: []\n    };\n  },\n  mounted() {\n    this.getBankSplits();\n\n    this.$root.$on(\"ExpenseAdded\", () => {\n      this.getBankSplits();\n    });\n  },\n  methods: {\n    fillData() {\n      var a = [\"A\", \"B\", \"C\"];\n      var labeldata;\n      for (var i = 0; i < a.length; i++) {\n        labeldata += [a][i];\n      }\n      console.log([labeldata]);\n\n      this.datacollection = {\n        labels: [\n          \"Citi Credit Card\",\n          \"Bofa Credit Card\",\n          \"Bofa Checking Account\",\n          \"DCU Checking\",\n          \"Discover Savings\",\n          \"Discover Credit Card\",\n          \"Marriott Credit Card\",\n          \"Chase Credit Card\"\n        ],\n        datasets: [\n          {\n            backgroundColor: [\n              \"#41B883\",\n              \"#E46651\",\n              \"#00D8FF\",\n              \"#E0D8FF\",\n              \"#4068FF\",\n              \"#E1D800\",\n              \"#00FF00\",\n              \"#00FFFF\"\n            ],\n            borderColor: \"lightpink\",\n            pointBackgroundColor: \"blue\",\n            borderWidth: 1,\n            data: this.data\n          }\n        ]\n      };\n    },\n    getBankSplits() {\n      axios\n        .get(\"http://localhost:5000/getBankSplits\")\n        .then(response => {\n          var results = response.data;\n          var Citi = results.TotalCard[0].CitiCreditCard;\n          var DCUChecking = results.TotalCard[0].DCUChecking;\n          var BofaCr = results.TotalCard[0].BofaCreditCard;\n          var BofaChk = results.TotalCard[0].BofaCheckingAccount;\n          var MarriottCr = results.TotalCard[0].MarriottCreditCard;\n          var ChaseCr = results.TotalCard[0].ChaseCreditCard;\n          var DiscoverSavings = results.TotalCard[0].DiscoverSavings;\n          var DiscoverCr = results.TotalCard[0].DiscoverCreditCard;\n\n          this.data = [\n            Citi,\n            BofaCr,\n            BofaChk,\n            DCUChecking,\n            DiscoverSavings,\n            DiscoverCr,\n            MarriottCr,\n            ChaseCr\n          ];\n          this.fillData();\n        })\n        .catch(err => console.error(err));\n    }\n  },\n  computed: {\n    myStyles() {\n      return {\n        height: \"40%\",\n        width: \"99%\",\n        position: \"relative\"\n      };\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}